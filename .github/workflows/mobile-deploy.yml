name: Mobile Deploy

on:
  push:
    branches: [main]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-deploy.yml'

env:
  NODE_VERSION: '18'
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  validate:
    name: Validate & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        run: |
          cd mobile
          npm ci

      - name: Type check
        run: |
          cd mobile
          npm run type-check

      - name: Lint
        run: |
          cd mobile
          npm run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        run: |
          cd mobile
          npm ci

      - name: Run tests
        run: |
          cd mobile
          npm test -- --coverage --passWithNoTests

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./mobile/coverage/coverage-final.json
          flags: mobile
          fail_ci_if_error: false

  build:
    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: [validate, test]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - platform: ios
            os: macos-latest
          - platform: android
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        run: |
          cd mobile
          npm ci

      - name: Build with EAS
        run: |
          cd mobile
          npm install -g eas-cli@latest
          eas build --platform ${{ matrix.platform }} --non-interactive --wait
        env:
          EAS_TOKEN: ${{ env.EXPO_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mobile-build-${{ matrix.platform }}
          path: mobile/dist/
          retention-days: 30

  deploy-testflight:
    name: Deploy to TestFlight (iOS)
    runs-on: macos-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        run: |
          cd mobile
          npm ci

      - name: Deploy to TestFlight with EAS
        run: |
          cd mobile
          npm install -g eas-cli@latest
          eas submit --platform ios --latest
        env:
          EAS_TOKEN: ${{ env.EXPO_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

  deploy-google-play:
    name: Deploy to Google Play (Android)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        run: |
          cd mobile
          npm ci

      - name: Deploy to Google Play with EAS
        run: |
          cd mobile
          npm install -g eas-cli@latest
          eas submit --platform android --latest
        env:
          EAS_TOKEN: ${{ env.EXPO_TOKEN }}
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-testflight, deploy-google-play]
    if: always()
    steps:
      - name: Determine status
        id: status
        run: |
          if [[ "${{ needs.deploy-testflight.result }}" == "success" && "${{ needs.deploy-google-play.result }}" == "success" ]]; then
            echo "status=✅ Mobile deployment successful" >> $GITHUB_OUTPUT
          else
            echo "status=⚠️ Mobile deployment completed with issues" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        if: always()
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "${{ steps.status.outputs.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Mobile App Deployment*\n${{ steps.status.outputs.status }}\n\nTestFlight: `${{ needs.deploy-testflight.result }}`\nGoogle Play: `${{ needs.deploy-google-play.result }}`"
                  }
                }
              ]
            }
